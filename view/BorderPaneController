package view;

import javafx.fxml.FXML;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Line;
import javafx.scene.shape.Path;
import javafx.scene.shape.Rectangle;
import symbols.CCircle;
import symbols.CurveRectangle;
import symbols.Diamond;
import symbols.LLine;
import symbols.Parallelogram;
import symbols.RRectangle;
import symbols.RoundRectangle;
import javafx.scene.ParallelCamera;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;

public class BorderPaneController {
	@FXML
	private Pane pane;
	@FXML
	private Rectangle rectangle; // 矩形
	@FXML
	private Rectangle roundRect; // 圆角矩形
	@FXML
	private Path diamond; // 菱形
	@FXML
	private Path parallelogram; // 平行四边形
	@FXML
	private Line line; // 实线
	@FXML
	private Circle circle; // 圆
	@FXML
	private Path curveRect; // 曲线矩形

	@FXML
	private void drawRect() {
		double width = 100;
		double height = 40;
		double x = (pane.getPrefWidth() - width) / 2;
		double y = (pane.getPrefHeight() - height) / 2;
		RRectangle rect = new RRectangle(x, y, width, height);
		if(rect.isElected()) {
			Line line[]=rect.getcBox().getcBox();
			for(Line l:line) {
				pane.getChildren().add(l);
			}
			Circle circles[]=rect.getcBox().getCircles();
			for(Circle c:circles) {
				pane.getChildren().add(c);
			}
		}
		pane.getChildren().add(rect);
	}

	@FXML
	private void drawRoundRect() {
		double width = 100;
		double height = 40;
		double x = (pane.getPrefWidth() - width) / 2;
		double y = (pane.getPrefHeight() - height) / 2;
		RoundRectangle roundRect = new RoundRectangle(x, y, width, height);
		if(roundRect.isElected()) {
			Line line[]=roundRect.getcBox().getcBox();
			for(Line l:line) {
				pane.getChildren().add(l);
			}
			Circle circles[]=roundRect.getcBox().getCircles();
			for(Circle c:circles) {
				pane.getChildren().add(c);
			}
		}
		pane.getChildren().add(roundRect);
	}

	@FXML
	private void drawDiamond() {
		double width = 100.0;
		double height = 50.0;
		double x = (pane.getPrefWidth() - width) / 2;
		double y = (pane.getPrefHeight() - height) / 2;
		Diamond d = new Diamond(x, y, width, height);
		if (d.isElected()) {
			Line line[] = d.getcBox().getcBox();
			for (Line l : line) {
				pane.getChildren().add(l);
			}
			Circle circles[] = d.getcBox().getCircles();
			for (Circle c : circles) {
				pane.getChildren().add(c);
			}
		}
		pane.getChildren().add(d);
	}

	@FXML
	private void drawParallelogram() {
		double width = 115.0;
		double height = 40.0;
		double x = (pane.getPrefWidth() - width) / 2;
		double y = (pane.getPrefHeight() - height) / 2;
		Parallelogram p = new Parallelogram(x, y, width, height);
		pane.getChildren().add(p);
	}

	@FXML
	private void drawLine() {// 未完善
		double startX = (pane.getPrefWidth() - 100) / 2;
		double startY = (pane.getPrefHeight() - 100) / 2;
		double endX = startX + 100;
		double endY = startY;
		LLine l = new LLine(startX, startY, endX, endY);
		pane.getChildren().add(l);
	}

	@FXML
	private void drawCircle() {
		double radius = 10;
		double centerX = (pane.getPrefWidth() - radius) / 2;
		double centerY = (pane.getPrefHeight() - radius) / 2;
		CCircle c = new CCircle(centerX, centerY, radius);
		pane.getChildren().add(c);
	}

	@FXML
	private void drawCurveRect() {
		double width = 120.0;
		double height = 50.0;
		double startX = (pane.getPrefWidth() - width) / 2;
		double startY = (pane.getPrefHeight() - height) / 2;
		CurveRectangle cr = new CurveRectangle(startX, startY, width, height);
		pane.getChildren().add(cr);
	}
}
